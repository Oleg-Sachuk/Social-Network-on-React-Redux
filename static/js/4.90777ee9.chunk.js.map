{"version":3,"sources":["components/Users/Users.module.css","components/Users/Users.jsx","utils/selectors/users-selectors.js","components/Users/UsersContainer.jsx"],"names":["module","exports","Users","props","pagesCount","Math","ceil","totalUsersCount","pageSize","pages","i","currentPage","push","className","style","head","users","map","user","postBlock","Card","body","Row","Col","to","id","src","photos","small","ppic","userPhoto","alt","followed","disabled","followingProgress","some","follbtn","onClick","getUnfollowingThunk","getFollowingThunk","xs","fullname","name","surname","status","backinfo","betime","paging","leftbtn","e","onPageChanged","page","pblock","selected","rightbtn","getAllUsers","state","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","isFetching","getFollowingProgress","UsersAPIComponent","pageNumber","setCurrentPage","getUsersThunk","this","Loader","loader","React","Component","compose","connect","AuthRedirect"],"mappings":"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","file":"static/js/4.90777ee9.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"userPhoto\":\"Users_userPhoto__3nCBA\",\"postBlock\":\"Users_postBlock__3fA2K\",\"follbtn\":\"Users_follbtn__1Yc3K\",\"head\":\"Users_head__2-c3x\",\"selected\":\"Users_selected__3sIJM\",\"paging\":\"Users_paging__1aNT0\",\"loader\":\"Users_loader__1sd4r\",\"fullname\":\"Users_fullname__39q9O\",\"backinfo\":\"Users_backinfo__tl_Dh\",\"betime\":\"Users_betime__yFJDg\",\"pblock\":\"Users_pblock__2JCbc\",\"leftbtn\":\"Users_leftbtn__2Tmt8\",\"rightbtn\":\"Users_rightbtn__2U0FG\"};","import React from 'react';\r\nimport style from './Users.module.css';\r\nimport ppic from '../../assets/images/laptop-user.png';\r\nimport { NavLink } from 'react-router-dom';\r\nimport { Card, Col, Row } from 'react-bootstrap';\r\n\r\nconst Users = (props) => {\r\n\r\n    let pagesCount = Math.ceil(props.totalUsersCount / props.pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = props.currentPage - 3; i <= props.currentPage + 3; i++) {\r\n        pages.push(i);\r\n    }\r\n    return (\r\n        <div>\r\n            <h3 className={style.head}>Users:</h3>\r\n            {\r\n                props.users.map(user => <div className={style.postBlock} key={user.id}>\r\n                    <Card body>\r\n                        <Row>\r\n                            <Col>\r\n                                <div>\r\n                                    <NavLink to={'/profile/' + user.id} >\r\n                                        <img src={user.photos.small != null ? user.photos.small : ppic} className={style.userPhoto} alt='Profile pic' />\r\n                                    </NavLink>\r\n                                </div>\r\n                                <div>\r\n                                    {user.followed\r\n                                        ?   <button disabled={props.followingProgress.some(id => id === user.id)} className={style.follbtn} onClick={() => {\r\n                                            props.getUnfollowingThunk(user.id)\r\n                                        }}> Unfollow\r\n                                            </button>\r\n                                        :   < button disabled={props.followingProgress.some(id => id === user.id)} className={style.follbtn} onClick={() => {\r\n                                            props.getFollowingThunk(user.id)\r\n                                        }}> Follow\r\n                                            </button>\r\n                                    }\r\n                                </div>\r\n                            </Col>\r\n                            <Col xs={9}>\r\n                                <div className={style.fullname}>\r\n                                    {user.name} {user.surname}\r\n                                    <div><span>{user.status}</span></div>\r\n                                </div>\r\n                                <div className={style.backinfo}>\r\n                                    <p className={style.betime}>{'user.location.country'}<br />{'user.location.city'}</p>\r\n                                </div>\r\n                            </Col>\r\n                        </Row>\r\n                    </Card>\r\n                </div>)\r\n            }\r\n            <div className={style.paging}>\r\n                <button className={style.leftbtn} onClick={(e) => { props.onPageChanged(props.currentPage-1) }}>{\"<<\"}</button>\r\n                {\r\n                    pages.map(page => {\r\n                        if (page >= 1 && page <= pagesCount) {\r\n                            return <div className={style.pblock}><button className={props.currentPage === page && style.selected}\r\n                                onClick={(e) => { props.onPageChanged(page) }}>{page} </button></div>\r\n                        } else\r\n                            return null\r\n                    })\r\n                }\r\n                <span onClick={(e) => { props.onPageChanged(pagesCount) }}>{` Out of: ${pagesCount}`}</span>\r\n                <button className={style.rightbtn} onClick={(e) => { props.onPageChanged(props.currentPage+1) }}>{\">>\"}</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Users;","export const getAllUsers = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingProgress = (state) => {\r\n    return state.usersPage.followingProgress;\r\n}","import React from 'react';\r\nimport Users from './Users';\r\nimport style from './Users.module.css'\r\nimport { connect } from 'react-redux';\r\nimport { setCurrentPage, getUsersThunk, getFollowingThunk, getUnfollowingThunk } from '../../redux/users-reducer';\r\nimport Loader from '../../assets/GIFs/Loader';\r\nimport { compose } from 'redux';\r\nimport { AuthRedirect } from '../../hoc/AuthRedirect';\r\nimport { getAllUsers, getCurrentPage, getFollowingProgress, getIsFetching, getPageSize, getTotalUsersCount } from \"../../utils/selectors/users-selectors\";\r\n\r\nclass UsersAPIComponent extends React.Component {\r\n\r\n    componentDidMount() {\r\n        this.props.getUsersThunk(this.props.currentPage, this.props.pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        this.props.setCurrentPage(pageNumber);\r\n        this.props.getUsersThunk(pageNumber, this.props.pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            { this.props.isFetching ? <Loader className={style.loader} /> : null }\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                pageSize={this.props.pageSize}\r\n                currentPage={this.props.currentPage}\r\n                users={this.props.users}\r\n                onPageChanged={this.onPageChanged}\r\n                getFollowingThunk={this.props.getFollowingThunk}\r\n                getUnfollowingThunk={this.props.getUnfollowingThunk}\r\n                followingProgress={this.props.followingProgress}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getAllUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingProgress: getFollowingProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, {\r\n    setCurrentPage, getFollowingThunk,\r\n    getUsersThunk, getUnfollowingThunk}),AuthRedirect)(UsersAPIComponent);"],"sourceRoot":""}